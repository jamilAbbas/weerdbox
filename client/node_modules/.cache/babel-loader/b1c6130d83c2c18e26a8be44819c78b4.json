{"ast":null,"code":"import \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nimport { put, takeLatest, all, take, takeEvery } from \"redux-saga/effects\";\nimport { push, replace } from \"react-router-redux\";\nimport { axios } from \"axios\";\nimport { SUBMIT_ART_REQUEST } from \"./containers/SectionTop/constants\";\nimport { SIGNUP_REQUEST } from \"./containers/Register/constants\";\nimport { LOGIN_REQUEST } from \"./containers/Login/constants\";\nimport { GET_ALL_ARTS } from \"./containers/app/constants\";\nimport { GET_MY_ARTS } from \"./containers/Dashboard/constants\";\nimport { getAuthToken } from \"./utils/getAuthToken\";\nimport { setCurrentUser, loginFailed } from \"./containers/Login/actions\";\nimport { signUpSuccess } from \"./containers/Register/actions\";\nimport { getArtsSuccess } from \"./containers/app/actions\";\nimport { getMyArtsSuccess } from \"./containers/Dashboard/actions\";\nimport jwt_decode from \"jwt-decode\";\nimport { IMAGE_LIKE_REQUEST } from \"./components/LikeandShare/constants\";\nimport { imageLikeSuccess } from \"./components/LikeandShare/actions\";\nimport { getAllArts, searchArtsSuccess } from \"./containers/app/actions\";\nimport { SEARCH_ARTS_REQUEST } from \"./containers/app/constants\";\nimport { ON_APPROVE_ART, ON_DISAPPROVE_ART, ON_DELETE_ART } from \"./containers/Admin/constants\";\n\nfunction* fetchArts(action) {\n  const token = getAuthToken();\n  const data = {\n    name: action.data.name,\n    email: action.data.email,\n    website: action.data.website,\n    phone: action.data.phone,\n    description: action.data.description,\n    tags: action.data.tags,\n    art: action.data.art\n  };\n\n  try {\n    const response = yield fetch(\"arts\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n  } catch (error) {}\n}\n\nfunction* signupRequestHandler(action) {\n  const data = {\n    fullname: action.data.name,\n    email: action.data.email,\n    password: action.data.password\n  };\n\n  try {\n    const response = yield fetch(\"users/register\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, cors, *same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrer: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    }).then(res => res.json());\n    yield put(signUpSuccess());\n  } catch (error) {// yield put(fetchListError(error));\n  }\n}\n\nfunction* loginRequestWatcher(action) {\n  const data = {\n    email: action.data.username,\n    password: action.data.password\n  };\n\n  try {\n    const response = yield fetch(\"users/login\", {\n      method: \"POST\",\n      // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\",\n      // no-cors, cors, *same-origin\n      cache: \"no-cache\",\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\",\n      // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\" // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: \"follow\",\n      // manual, *follow, error\n      referrer: \"no-referrer\",\n      // no-referrer, *client\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n\n    }).then(res => res.json());\n\n    if (response.token) {\n      localStorage.setItem(\"jwtToken\", response.token);\n      const decoded = jwt_decode(response.token);\n      yield put(setCurrentUser(decoded));\n    }\n  } catch (error) {\n    console.log(\"catch login error\");\n  }\n}\n\nfunction* getAllArtsWorker(action) {\n  try {\n    const response = yield fetch(\"arts/all\", {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      referrer: \"no-referrer\"\n    }).then(res => res.json());\n    yield put(getArtsSuccess(response));\n  } catch (error) {// yield put(fetchListError(error));\n  }\n}\n\nfunction* getMyArtsWatcher(action) {\n  const _action$payload = action.payload,\n        id = _action$payload.id,\n        email = _action$payload.email;\n  const token = getAuthToken();\n  const data = {\n    email: email\n  };\n\n  try {\n    const response = yield fetch(\"arts/myarts\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n    yield put(getMyArtsSuccess(response));\n  } catch (error) {\n    console.log(\"catch dashboard error\");\n  }\n}\n\nfunction* imageLikeRequestWatcher(action) {\n  console.log(\"imagelikerequestwatcher\", action.payload.imageId);\n  const data = {\n    imageId: action.payload.imageId,\n    userId: action.payload.userId\n  };\n\n  try {\n    const response = yield fetch(\"likes/like\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json()); // yield put(imageLikeSuccess(response));\n\n    console.log(\"oooooooooooooo\", response);\n\n    if (response.imageLiked === \"You have already Liked this image\") {\n      console.log(response.imageLiked);\n\n      _message.warn(response.imageLiked);\n    } else {\n      yield put(getAllArts());\n\n      _message.success(\"Liked!\");\n    }\n  } catch (error) {\n    console.log(\"catch dashboard error\");\n  }\n}\n\nfunction* searchArtsWatcher(action) {\n  const data = {\n    searchQuery: action.payload\n  };\n\n  try {\n    const response = yield fetch(\"arts/search\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n\n    if (response.length < 1) {\n      console.log(response.noSearchResult);\n\n      _message.warn(\" No Results Found\");\n    } else {\n      yield put(searchArtsSuccess(response));\n    }\n  } catch (error) {\n    console.log(\"search error\");\n  }\n}\n\nfunction* approveRequestWatcher(action) {\n  const data = {\n    imageId: action.payload\n  };\n\n  try {\n    const response = yield fetch(\"arts/approve\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n\n    if (response.length < 1) {\n      console.log(response.updateFailed);\n\n      _message.warn(\" Could not update, try again\");\n    } else {\n      yield put(getAllArts());\n\n      _message.success(\"Successfully approved\");\n    }\n  } catch (error) {\n    console.log(\"search error\");\n  }\n}\n\nfunction* disApproveRequestWatcher(action) {\n  const data = {\n    imageId: action.payload\n  };\n\n  try {\n    const response = yield fetch(\"arts/disapprove\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n\n    if (response.length < 1) {\n      _message.warn(\" Could not disapprove, try again\");\n    } else {\n      yield put(getAllArts());\n\n      _message.success(\"Successfully disapproved\");\n    }\n  } catch (error) {\n    console.log(\"search error\");\n  }\n}\n\nfunction* deleteArtWatcher(action) {\n  const data = {\n    imageId: action.payload\n  };\n\n  try {\n    const response = yield fetch(\"arts/delete\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n\n    if (response.length < 1) {\n      _message.warn(\" Could not delete, try again\");\n    } else {\n      yield put(getAllArts());\n\n      _message.success(\"Successfully deleted\");\n    }\n  } catch (error) {\n    console.log(\"delete error\");\n  }\n}\n\nfunction* submitArtWatcher(values) {\n  yield takeLatest(SUBMIT_ART_REQUEST, fetchArts);\n  yield takeLatest(SIGNUP_REQUEST, signupRequestHandler);\n  yield takeLatest(LOGIN_REQUEST, loginRequestWatcher);\n  yield takeLatest(GET_ALL_ARTS, getAllArtsWorker);\n  yield takeLatest(GET_MY_ARTS, getMyArtsWatcher);\n  yield takeLatest(IMAGE_LIKE_REQUEST, imageLikeRequestWatcher);\n  yield takeLatest(SEARCH_ARTS_REQUEST, searchArtsWatcher);\n  yield takeLatest(ON_APPROVE_ART, approveRequestWatcher);\n  yield takeLatest(ON_DISAPPROVE_ART, disApproveRequestWatcher);\n  yield takeLatest(ON_DELETE_ART, deleteArtWatcher);\n}\n\nexport default function* rootSaga() {\n  yield all([submitArtWatcher()]);\n}","map":{"version":3,"sources":["/home/engintech/project/stonebird/Blotter/weerdboxbackend/client/src/sagas.js"],"names":["put","takeLatest","all","take","takeEvery","push","replace","axios","SUBMIT_ART_REQUEST","SIGNUP_REQUEST","LOGIN_REQUEST","GET_ALL_ARTS","GET_MY_ARTS","getAuthToken","setCurrentUser","loginFailed","signUpSuccess","getArtsSuccess","getMyArtsSuccess","jwt_decode","IMAGE_LIKE_REQUEST","imageLikeSuccess","getAllArts","searchArtsSuccess","SEARCH_ARTS_REQUEST","ON_APPROVE_ART","ON_DISAPPROVE_ART","ON_DELETE_ART","fetchArts","action","token","data","name","email","website","phone","description","tags","art","response","fetch","method","mode","cache","credentials","headers","Authorization","redirect","referrer","body","JSON","stringify","then","res","json","error","signupRequestHandler","fullname","password","loginRequestWatcher","username","localStorage","setItem","decoded","console","log","getAllArtsWorker","getMyArtsWatcher","payload","id","imageLikeRequestWatcher","imageId","userId","imageLiked","warn","success","searchArtsWatcher","searchQuery","length","noSearchResult","approveRequestWatcher","updateFailed","disApproveRequestWatcher","deleteArtWatcher","submitArtWatcher","values","rootSaga"],"mappings":"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","sourcesContent":["import { put, takeLatest, all, take, takeEvery } from \"redux-saga/effects\";\nimport { push, replace } from \"react-router-redux\";\nimport { axios } from \"axios\";\nimport { SUBMIT_ART_REQUEST } from \"./containers/SectionTop/constants\";\nimport { SIGNUP_REQUEST } from \"./containers/Register/constants\";\nimport { LOGIN_REQUEST } from \"./containers/Login/constants\";\nimport { GET_ALL_ARTS } from \"./containers/app/constants\";\nimport { GET_MY_ARTS } from \"./containers/Dashboard/constants\";\nimport { getAuthToken } from \"./utils/getAuthToken\";\nimport { setCurrentUser, loginFailed } from \"./containers/Login/actions\";\nimport { signUpSuccess } from \"./containers/Register/actions\";\nimport { getArtsSuccess } from \"./containers/app/actions\";\nimport { getMyArtsSuccess } from \"./containers/Dashboard/actions\";\nimport jwt_decode from \"jwt-decode\";\nimport { IMAGE_LIKE_REQUEST } from \"./components/LikeandShare/constants\";\nimport { imageLikeSuccess } from \"./components/LikeandShare/actions\";\nimport { getAllArts, searchArtsSuccess } from \"./containers/app/actions\";\nimport { SEARCH_ARTS_REQUEST } from \"./containers/app/constants\";\nimport {\n  ON_APPROVE_ART,\n  ON_DISAPPROVE_ART,\n  ON_DELETE_ART\n} from \"./containers/Admin/constants\";\nimport { message } from \"antd\";\nfunction* fetchArts(action) {\n  const token = getAuthToken();\n  const data = {\n    name: action.data.name,\n    email: action.data.email,\n    website: action.data.website,\n    phone: action.data.phone,\n    description: action.data.description,\n    tags: action.data.tags,\n    art: action.data.art\n  };\n  try {\n    const response = yield fetch(\"arts\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n  } catch (error) {}\n}\n\nfunction* signupRequestHandler(action) {\n  const data = {\n    fullname: action.data.name,\n    email: action.data.email,\n    password: action.data.password\n  };\n  try {\n    const response = yield fetch(\"users/register\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, cors, *same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrer: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    }).then(res => res.json());\n    yield put(signUpSuccess());\n  } catch (error) {\n    // yield put(fetchListError(error));\n  }\n}\n\nfunction* loginRequestWatcher(action) {\n  const data = {\n    email: action.data.username,\n    password: action.data.password\n  };\n  try {\n    const response = yield fetch(\"users/login\", {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, cors, *same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      redirect: \"follow\", // manual, *follow, error\n      referrer: \"no-referrer\", // no-referrer, *client\n      body: JSON.stringify(data) // body data type must match \"Content-Type\" header\n    }).then(res => res.json());\n    if (response.token) {\n      localStorage.setItem(\"jwtToken\", response.token);\n      const decoded = jwt_decode(response.token);\n      yield put(setCurrentUser(decoded));\n    }\n  } catch (error) {\n    console.log(\"catch login error\");\n  }\n}\n\nfunction* getAllArtsWorker(action) {\n  try {\n    const response = yield fetch(\"arts/all\", {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      referrer: \"no-referrer\"\n    }).then(res => res.json());\n\n    yield put(getArtsSuccess(response));\n  } catch (error) {\n    // yield put(fetchListError(error));\n  }\n}\n\nfunction* getMyArtsWatcher(action) {\n  const { id, email } = action.payload;\n  const token = getAuthToken();\n\n  const data = {\n    email: email\n  };\n  try {\n    const response = yield fetch(\"arts/myarts\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n    yield put(getMyArtsSuccess(response));\n  } catch (error) {\n    console.log(\"catch dashboard error\");\n  }\n}\n\nfunction* imageLikeRequestWatcher(action) {\n  console.log(\"imagelikerequestwatcher\", action.payload.imageId);\n  const data = {\n    imageId: action.payload.imageId,\n    userId: action.payload.userId\n  };\n  try {\n    const response = yield fetch(\"likes/like\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n    // yield put(imageLikeSuccess(response));\n    console.log(\"oooooooooooooo\", response);\n    if (response.imageLiked === \"You have already Liked this image\") {\n      console.log(response.imageLiked);\n      message.warn(response.imageLiked);\n    } else {\n      yield put(getAllArts());\n      message.success(\"Liked!\");\n    }\n  } catch (error) {\n    console.log(\"catch dashboard error\");\n  }\n}\n\nfunction* searchArtsWatcher(action) {\n  const data = {\n    searchQuery: action.payload\n  };\n  try {\n    const response = yield fetch(\"arts/search\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n    if (response.length < 1) {\n      console.log(response.noSearchResult);\n      message.warn(\" No Results Found\");\n    } else {\n      yield put(searchArtsSuccess(response));\n    }\n  } catch (error) {\n    console.log(\"search error\");\n  }\n}\n\nfunction* approveRequestWatcher(action) {\n  const data = {\n    imageId: action.payload\n  };\n  try {\n    const response = yield fetch(\"arts/approve\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n    if (response.length < 1) {\n      console.log(response.updateFailed);\n      message.warn(\" Could not update, try again\");\n    } else {\n      yield put(getAllArts());\n      message.success(\"Successfully approved\");\n    }\n  } catch (error) {\n    console.log(\"search error\");\n  }\n}\n\nfunction* disApproveRequestWatcher(action) {\n  const data = {\n    imageId: action.payload\n  };\n  try {\n    const response = yield fetch(\"arts/disapprove\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n    if (response.length < 1) {\n      message.warn(\" Could not disapprove, try again\");\n    } else {\n      yield put(getAllArts());\n      message.success(\"Successfully disapproved\");\n    }\n  } catch (error) {\n    console.log(\"search error\");\n  }\n}\n\nfunction* deleteArtWatcher(action) {\n  const data = {\n    imageId: action.payload\n  };\n  try {\n    const response = yield fetch(\"arts/delete\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        // Authorization: token,\n        \"Content-Type\": \"application/json\"\n      },\n      redirect: \"follow\",\n      referrer: \"no-referrer\",\n      body: JSON.stringify(data)\n    }).then(res => res.json());\n    if (response.length < 1) {\n      message.warn(\" Could not delete, try again\");\n    } else {\n      yield put(getAllArts());\n      message.success(\"Successfully deleted\");\n    }\n  } catch (error) {\n    console.log(\"delete error\");\n  }\n}\n\nfunction* submitArtWatcher(values) {\n  yield takeLatest(SUBMIT_ART_REQUEST, fetchArts);\n  yield takeLatest(SIGNUP_REQUEST, signupRequestHandler);\n  yield takeLatest(LOGIN_REQUEST, loginRequestWatcher);\n  yield takeLatest(GET_ALL_ARTS, getAllArtsWorker);\n  yield takeLatest(GET_MY_ARTS, getMyArtsWatcher);\n  yield takeLatest(IMAGE_LIKE_REQUEST, imageLikeRequestWatcher);\n  yield takeLatest(SEARCH_ARTS_REQUEST, searchArtsWatcher);\n  yield takeLatest(ON_APPROVE_ART, approveRequestWatcher);\n  yield takeLatest(ON_DISAPPROVE_ART, disApproveRequestWatcher);\n  yield takeLatest(ON_DELETE_ART, deleteArtWatcher);\n}\n\nexport default function* rootSaga() {\n  yield all([submitArtWatcher()]);\n}\n"]},"metadata":{},"sourceType":"module"}