{"ast":null,"code":"var _jsxFileName = \"/home/engintech/project/stonebird/Blotter/weerdboxbackend/client/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport jwt_decode from \"jwt-decode\";\nimport app from \"./rootReducer\";\nimport NavigationBar from \"./containers/NavigationBar\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Register from \"./containers/Register\";\nimport Login from \"./containers/Login\";\nimport PrivateRoute from \"./commons/PrivateRoutes\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport About from \"./containers/About\";\nimport Rules from \"./containers/Rules\";\nimport Thanks from \"./components/Thanks\";\nimport Dashboard from \"./containers/Dashboard\";\nimport { setCurrentUser } from \"./containers/Login/actions\";\nimport Admin from \"./containers/Admin\";\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(app, composeWithDevTools(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(rootSaga);\n\nif (localStorage.jwtToken) {\n  const decoded = jwt_decode(localStorage.getItem(\"jwtToken\"));\n  store.dispatch(setCurrentUser(decoded)); // Check for expired token\n\n  const currentTime = Date.now() / 1000;\n\n  if (decoded.exp < currentTime) {\n    store.dispatch(setCurrentUser({}));\n    localStorage.removeItem(\"jwtToken\");\n    window.location.replace(\"/login\");\n  }\n}\n\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(Router, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(NavigationBar, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}), React.createElement(Route, {\n  exact: true,\n  path: \"/\",\n  component: App,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/register\",\n  component: Register,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/login\",\n  component: Login,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/about\",\n  component: About,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 50\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/rules\",\n  component: Rules,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}), React.createElement(Route, {\n  path: \"/thanks\",\n  component: Thanks,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}), React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(PrivateRoute, {\n  exact: true,\n  path: \"/admin\",\n  component: Admin,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n})), React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, React.createElement(PrivateRoute, {\n  exact: true,\n  path: \"/dashboard\",\n  component: Dashboard,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n})))), document.getElementById(\"root\"));\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/engintech/project/stonebird/Blotter/weerdboxbackend/client/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","createStore","applyMiddleware","jwt_decode","app","NavigationBar","composeWithDevTools","Provider","BrowserRouter","Router","Route","Switch","Register","Login","PrivateRoute","createSagaMiddleware","rootSaga","About","Rules","Thanks","Dashboard","setCurrentUser","Admin","sagaMiddleware","store","run","localStorage","jwtToken","decoded","getItem","dispatch","currentTime","Date","now","exp","removeItem","window","location","replace","render","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport jwt_decode from \"jwt-decode\";\n\nimport app from \"./rootReducer\";\nimport NavigationBar from \"./containers/NavigationBar\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Register from \"./containers/Register\";\nimport Login from \"./containers/Login\";\nimport PrivateRoute from \"./commons/PrivateRoutes\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./sagas\";\nimport About from \"./containers/About\";\nimport Rules from \"./containers/Rules\";\nimport Thanks from \"./components/Thanks\";\nimport Dashboard from \"./containers/Dashboard\";\nimport { setCurrentUser } from \"./containers/Login/actions\";\nimport Admin from \"./containers/Admin\";\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  app,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\nif (localStorage.jwtToken) {\n  const decoded = jwt_decode(localStorage.getItem(\"jwtToken\"));\n  store.dispatch(setCurrentUser(decoded));\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(setCurrentUser({}));\n    localStorage.removeItem(\"jwtToken\");\n    window.location.replace(\"/login\");\n  }\n}\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <NavigationBar />\n      <Route exact path=\"/\" component={App} />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/rules\" component={Rules} />\n      <Route path=\"/thanks\" component={Thanks} />\n      <Switch>\n        <PrivateRoute exact path=\"/admin\" component={Admin} />\n      </Switch>\n      <Switch>\n        <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}