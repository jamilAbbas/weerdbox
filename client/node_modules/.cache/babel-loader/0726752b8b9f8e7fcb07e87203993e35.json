{"ast":null,"code":"import \"antd/es/icon/style/css\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style/css\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/home/engintech/project/stonebird/Blotter/weerdboxbackend/client/src/components/LikeandShare/index.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { browserHistory } from \"react-router\";\nimport shareIcon from \"../../data/images/share.png\";\nimport { imageLikeRequest } from \"./actions\";\n\nclass LikeandShare extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      clicked: false\n    };\n  }\n\n  handleLike(imageId) {\n    const _this$props$auth = this.props.auth,\n          isAuthenticated = _this$props$auth.isAuthenticated,\n          user = _this$props$auth.user;\n\n    if (isAuthenticated) {\n      this.props.onClickImage(imageId, user.id);\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    } else {\n      _message.info(\"Please login to like and share \");\n    }\n  }\n\n  render() {\n    const _this$props = this.props,\n          likes = _this$props.likes,\n          shares = _this$props.shares,\n          imageId = _this$props.imageId,\n          newlikes = _this$props.newlikes,\n          hearts = _this$props.hearts;\n    const lik = newlikes && newlikes.likes;\n    return React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => this.handleLike(imageId),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"heart\",\n      theme: \"filled\",\n      style: {\n        fontSize: \"16px\",\n        color: \"#08c\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }), \" \", \"Likes : \", likes), React.createElement(\"span\", {\n      style: {\n        float: \"right\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: shareIcon,\n      alt: \"share icon\",\n      style: {\n        marginRight: \"4px\",\n        marginBottom: \"2px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), \"shares: \", shares));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    newlikes: state.LikeandShare\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickImage: (imageId, userId) => dispatch(imageLikeRequest(imageId, userId))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LikeandShare);","map":{"version":3,"sources":["/home/engintech/project/stonebird/Blotter/weerdboxbackend/client/src/components/LikeandShare/index.js"],"names":["React","connect","browserHistory","shareIcon","imageLikeRequest","LikeandShare","Component","state","clicked","handleLike","imageId","props","auth","isAuthenticated","user","onClickImage","id","setState","info","render","likes","shares","newlikes","hearts","lik","display","justifyContent","fontSize","color","float","marginRight","marginBottom","mapStateToProps","mapDispatchToProps","dispatch","userId"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,MAAMC,YAAN,SAA2BL,KAAK,CAACM,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACzCC,KADyC,GACjC;AACNC,MAAAA,OAAO,EAAE;AADH,KADiC;AAAA;;AAIzCC,EAAAA,UAAU,CAACC,OAAD,EAAU;AAAA,6BACgB,KAAKC,KAAL,CAAWC,IAD3B;AAAA,UACVC,eADU,oBACVA,eADU;AAAA,UACOC,IADP,oBACOA,IADP;;AAGlB,QAAID,eAAJ,EAAqB;AACnB,WAAKF,KAAL,CAAWI,YAAX,CAAwBL,OAAxB,EAAiCI,IAAI,CAACE,EAAtC;AACA,WAAKC,QAAL,CAAc;AACZT,QAAAA,OAAO,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADT,OAAd;AAGD,KALD,MAKO;AACL,eAAQU,IAAR,CAAa,iCAAb;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,wBAC8C,KAAKR,KADnD;AAAA,UACCS,KADD,eACCA,KADD;AAAA,UACQC,MADR,eACQA,MADR;AAAA,UACgBX,OADhB,eACgBA,OADhB;AAAA,UACyBY,QADzB,eACyBA,QADzB;AAAA,UACmCC,MADnC,eACmCA,MADnC;AAEP,UAAMC,GAAG,GAAGF,QAAQ,IAAIA,QAAQ,CAACF,KAAjC;AAEA,WACE;AAAK,MAAA,KAAK,EAAE;AAAEK,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,cAAc,EAAE;AAAnC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,OAAO,EAAE,MAAM,KAAKjB,UAAL,CAAgBC,OAAhB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,KAAK,EAAE,QAFT;AAGE,MAAA,KAAK,EAAE;AAAEiB,QAAAA,QAAQ,EAAE,MAAZ;AAAoBC,QAAAA,KAAK,EAAE;AAA3B,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKK,GALL,cAMWR,KANX,CADF,EASE;AAAM,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAE1B,SADP;AAEE,MAAA,GAAG,EAAC,YAFN;AAGE,MAAA,KAAK,EAAE;AAAE2B,QAAAA,WAAW,EAAE,KAAf;AAAsBC,QAAAA,YAAY,EAAE;AAApC,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,cAMWV,MANX,CATF,CADF;AAoBD;;AAzCwC;;AA2C3C,MAAMW,eAAe,GAAGzB,KAAK,IAAI;AAC/B,SAAO;AACLK,IAAAA,IAAI,EAAEL,KAAK,CAACK,IADP;AAELU,IAAAA,QAAQ,EAAEf,KAAK,CAACF;AAFX,GAAP;AAID,CALD;;AAMA,MAAM4B,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,YAAY,EAAE,CAACL,OAAD,EAAUyB,MAAV,KACZD,QAAQ,CAAC9B,gBAAgB,CAACM,OAAD,EAAUyB,MAAV,CAAjB;AAFL,GAAP;AAID,CALD;;AAOA,eAAelC,OAAO,CACpB+B,eADoB,EAEpBC,kBAFoB,CAAP,CAGb5B,YAHa,CAAf","sourcesContent":["import React from \"react\";\nimport { Icon, Card, message } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { browserHistory } from \"react-router\";\nimport shareIcon from \"../../data/images/share.png\";\nimport { imageLikeRequest } from \"./actions\";\n\nclass LikeandShare extends React.Component {\n  state = {\n    clicked: false\n  };\n  handleLike(imageId) {\n    const { isAuthenticated, user } = this.props.auth;\n\n    if (isAuthenticated) {\n      this.props.onClickImage(imageId, user.id);\n      this.setState({\n        clicked: !this.state.clicked\n      });\n    } else {\n      message.info(\"Please login to like and share \");\n    }\n  }\n\n  render() {\n    const { likes, shares, imageId, newlikes, hearts } = this.props;\n    const lik = newlikes && newlikes.likes;\n\n    return (\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <span onClick={() => this.handleLike(imageId)}>\n          <Icon\n            type=\"heart\"\n            theme={\"filled\"}\n            style={{ fontSize: \"16px\", color: \"#08c\" }}\n          />{\" \"}\n          Likes : {likes}\n        </span>\n        <span style={{ float: \"right\" }}>\n          <img\n            src={shareIcon}\n            alt=\"share icon\"\n            style={{ marginRight: \"4px\", marginBottom: \"2px\" }}\n          />\n          shares: {shares}\n        </span>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    auth: state.auth,\n    newlikes: state.LikeandShare\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    onClickImage: (imageId, userId) =>\n      dispatch(imageLikeRequest(imageId, userId))\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LikeandShare);\n"]},"metadata":{},"sourceType":"module"}